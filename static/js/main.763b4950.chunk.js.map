{"version":3,"sources":["fbase.js","components/AuthForm.js","routes/Auth.js","components/Nweet.js","components/NweetFactory.js","routes/Home.js","routes/Profile.js","components/Navigation.js","components/Router.js","components/App.js","index.js"],"names":["firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","firebaseInstance","authService","auth","dbService","firestore","storageService","storage","AuthForm","useState","newAccount","setNewAccount","email","setEmail","password","setPassword","error","setError","onChange","event","target","name","value","onSubmit","a","preventDefault","createUserWithEmailAndPassword","signInWithEmailAndPassword","message","className","type","placeholder","required","onClick","prev","Auth","onSocialClick","provider","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","icon","faTwitter","color","size","style","marginBottom","faGoogle","faGithub","Nweet","nweetObj","isOwner","editing","setEditing","text","newNweet","setNewNweet","onDeleteClick","window","confirm","doc","id","delete","attachmentURL","refFromURL","toggleEditing","update","autoFocus","src","width","height","alt","faTrash","faPencilAlt","NweetFactory","userObj","nweet","setNweet","attachment","setAttachment","attachmentRef","ref","child","uid","uuidv4","putString","response","getDownloadURL","collection","add","createdAt","Date","now","creatorId","maxLength","htmlFor","faPlus","accept","theFile","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","Boolean","readAsDataURL","opacity","backgroundImage","faTimes","Home","nweets","setNweets","useEffect","orderBy","onSnapshot","snapshot","newArray","docs","map","document","data","marginTop","Profile","refreshUser","history","useHistory","displayName","newDisplayName","setNewDisplayName","updateProfile","getMyNweets","where","signOut","push","Navigation","display","justifyContent","to","marginRight","marginLeft","flexDirection","alignItems","fontSize","faUser","colot","AppRouter","isLoggedIn","maxWidth","margin","exact","path","App","init","setInit","setUserObj","onAuthStateChanged","user","args","currentUser","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.763b4950.chunk.js","sourcesContent":["import firebase from \"firebase/compat/app\";\nimport \"firebase/compat/auth\";\nimport \"firebase/compat/firestore\";\nimport \"firebase/compat/storage\";\n\nconst firebaseConfig = {\n    apiKey: process.env.REACT_APP_API_KEY,\n    authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n    projectId: process.env.REACT_APP_PROJECT_ID,\n    storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n    messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID,\n    appId: process.env.REACT_APP_APP_ID\n};\n\nfirebase.initializeApp(firebaseConfig);\n\nexport const firebaseInstance = firebase;\nexport const authService = firebase.auth();\nexport const dbService = firebase.firestore();\nexport const storageService = firebase.storage();","import { authService } from \"fbase\";\nimport { useState } from \"react\";\nconst AuthForm = () => {\n    const [newAccount, setNewAccount] = useState(true);\n    const [email, setEmail] = useState(\"\");\n    const [password, setPassword] = useState(\"\");\n    const [error, setError] = useState(\"\");\n\n    const toggleAccount = () => setNewAccount((prev) => !prev);\n\n    const onChange = (event) => {\n        const {\n            target: { name, value },\n        } = event;\n        if (name === \"email\") {\n            setEmail(value);\n        } else if (name === \"password\") {\n            setPassword(value);\n        }\n    };\n\n    const onSubmit = async (event) => {\n        event.preventDefault();\n        try {\n            if (newAccount) {\n                // create newAccount\n                await authService.createUserWithEmailAndPassword(email, password);\n            } else {\n                // log in\n                await authService.signInWithEmailAndPassword(email, password);\n            }\n        } catch (error) {\n            setError(error.message);\n        }\n    };\n\n    return (\n        <>\n            <form onSubmit={onSubmit} className=\"container\">\n                <input\n                    name=\"email\"\n                    type=\"email\"\n                    placeholder=\"Email\"\n                    required\n                    value={email}\n                    onChange={onChange}\n                    className=\"authInput\"\n                />\n                <input\n                    name=\"password\"\n                    type=\"password\"\n                    placeholder=\"Password\"\n                    required\n                    value={password}\n                    onChange={onChange}\n                    className=\"authInput\"\n                />\n                <input\n                    type=\"submit\"\n                    value={newAccount ? \"Create Account\" : \"Log In\"}\n                    onClick={onSubmit}\n                    className=\"authInput authSubmit\"\n                />\n                {error && <span className=\"authError\">{error}</span>}\n            </form>\n            <span onClick={toggleAccount} className=\"authSwitch\">\n                {newAccount ? \"Sign In\" : \"Create Account\"}\n            </span>\n        </>\n    );\n};\n\nexport default AuthForm;","import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n    faTwitter,\n    faGoogle,\n    faGithub,\n} from \"@fortawesome/free-brands-svg-icons\";\nimport { authService, firebaseInstance } from \"fbase\";\nimport AuthForm from \"components/AuthForm\";\n\nconst Auth = () => {\n    const onSocialClick = async (event) => {\n        const {\n            target: { name },\n        } = event;\n        let provider;\n        if (name === \"google\") {\n            provider = new firebaseInstance.auth.GoogleAuthProvider();\n        } else if (name === \"github\") {\n            provider = new firebaseInstance.auth.GithubAuthProvider();\n        }\n        await authService.signInWithPopup(provider);\n    };\n\n    return (\n        <div className=\"authConatainer\">\n            <FontAwesomeIcon\n                icon={faTwitter}\n                color={\"#04AAFF\"}\n                size=\"3x\"\n                style={{ marginBottom: 30 }}\n            />\n            <AuthForm />\n            <div className=\"authBtns\">\n                <button onClick={onSocialClick} name=\"google\" className=\"authBtn\">\n                    Continue with Google <FontAwesomeIcon icon={faGoogle} />\n                </button>\n                <button onClick={onSocialClick} name=\"github\" className=\"authBtn\">\n                    Continue with Github <FontAwesomeIcon icon={faGithub} />\n                </button>\n            </div>\n        </div>\n    );\n};\n\nexport default Auth;","import { dbService, storageService } from \"fbase\";\nimport { useState } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTrash, faPencilAlt } from \"@fortawesome/free-solid-svg-icons\";\n\nconst Nweet = ({ nweetObj, isOwner }) => {\n    const [editing, setEditing] = useState(false);\n    const [newNweet, setNewNweet] = useState(nweetObj.text);\n\n    const onDeleteClick = async () => {\n        const ok = window.confirm(\"삭제하시겠습니까?\");\n        if (ok) {\n            await dbService.doc(`nweets/${nweetObj.id}`).delete();\n            if (nweetObj.attachmentURL !== \"\")\n                await storageService.refFromURL(nweetObj.attachmentURL).delete();\n        }\n    };\n\n    const toggleEditing = () => setEditing((prev) => !prev);\n\n    const onChange = (event) => {\n        const {\n            target: { value },\n        } = event;\n        setNewNweet(value);\n    };\n\n    const onSubmit = async (event) => {\n        event.preventDefault();\n        await dbService.doc(`nweets/${nweetObj.id}`).update({ text: newNweet });\n        setEditing(false);\n    };\n\n    return (\n        <div className=\"nweet\">\n            {editing ? (\n                <>\n                    <form onSubmit={onSubmit} className=\"container nweetEdit\">\n                        <input\n                            onChange={onChange}\n                            value={newNweet}\n                            required\n                            placeholder=\"Edit your nweet\"\n                            autoFocus\n                            className=\"formInput\"\n                        />\n                        <input type=\"submit\" value=\"Update Nweet\" className=\"formBtn\" />\n                    </form>\n                    <button onClick={toggleEditing} className=\"formBtn cancelBtn\">\n                        Cancel\n                    </button>\n                </>\n            ) : (\n                <>\n                    <h4>{nweetObj.text}</h4>\n                    {nweetObj.attachmentURL && (\n                        <img src={nweetObj.attachmentURL} width=\"50px\" height=\"50px\" alt=\"hihi\" />\n                    )}\n                    {isOwner && (\n                        <div className=\"nweet__actions\">\n                            <span onClick={onDeleteClick}>\n                                <FontAwesomeIcon icon={faTrash} />\n                            </span>\n                            <span onClick={toggleEditing}>\n                                <FontAwesomeIcon icon={faPencilAlt} />\n                            </span>\n                        </div>\n                    )}\n                </>\n            )}\n        </div>\n    );\n};\n\nexport default Nweet;","import { dbService, storageService } from \"fbase\";\nimport { useState } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlus, faTimes } from \"@fortawesome/free-solid-svg-icons\";\n\n\nconst NweetFactory = ({ userObj }) => {\n    const [nweet, setNweet] = useState(\"\");\n    const [attachment, setAttachment] = useState(\"\");\n\n    const onSubmit = async (event) => {\n        event.preventDefault();\n        if (nweet === \"\") {\n            return;\n        }\n        let attachmentURL = \"\";\n        if (attachment !== \"\") {\n            const attachmentRef = storageService.ref().child(`${userObj.uid}/${uuidv4()}`);\n            const response = await attachmentRef.putString(attachment, \"data_url\");\n            attachmentURL = await response.ref.getDownloadURL();\n        }\n        await dbService.collection(\"nweets\").add({\n            text: nweet,\n            createdAt: Date.now(),\n            creatorId: userObj.uid,\n            attachmentURL,\n        });\n        setNweet(\"\");\n        setAttachment(\"\");\n    };\n\n    const onChange = (event) => {\n        event.preventDefault();\n        const {\n            target: { value },\n        } = event;\n        setNweet(value);\n    };\n\n    const onFileChange = (event) => {\n        const {\n            target: { files },\n        } = event;\n        const theFile = files[0];\n        const reader = new FileReader();\n        reader.onloadend = (finishedEvent) => {\n            const {\n                currentTarget: { result },\n            } = finishedEvent;\n            setAttachment(result);\n        };\n        if (Boolean(theFile)) {\n            reader.readAsDataURL(theFile);\n        }\n    };\n\n    const onClearAttachment = () => setAttachment(\"\");\n    return (\n        <form onSubmit={onSubmit} className=\"factoryForm\">\n            <div className=\"factoryInput__container\">\n                <input\n                    className=\"factoryInput__input\"\n                    value={nweet}\n                    onChange={onChange}\n                    type=\"text\"\n                    placeholder=\"What's on your mind?\"\n                    maxLength={120}\n                />\n                <input type=\"submit\" value=\"&rarr;\" className=\"factoryInput__arrow\" />\n            </div>\n            <label htmlFor=\"attach-file\" className=\"factoryInput__label\">\n                <span>Add photos</span>\n                <FontAwesomeIcon icon={faPlus} />\n            </label>\n            <input\n                id=\"attach-file\"\n                type=\"file\"\n                accept=\"image/*\"\n                onChange={onFileChange}\n                style={{\n                    opacity: 0,\n                }}\n            />\n            {attachment && (\n                <div className=\"factoryForm__attachment\">\n                    <img\n                        src={attachment}\n                        style={{\n                            backgroundImage: attachment,\n                        }}\n                        alt=\"null\"\n                    />\n                    <div className=\"factoryForm__clear\" onClick={onClearAttachment}>\n                        <span>Remove</span>\n                        <FontAwesomeIcon icon={faTimes} />\n                    </div>\n                </div>\n            )}\n        </form>\n    );\n};\nexport default NweetFactory;","import { dbService } from \"fbase\";\nimport { useEffect, useState } from \"react\";\nimport Nweet from \"components/Nweet\";\nimport NweetFactory from \"components/NweetFactory\";\n\nconst Home = ({ userObj }) => {\n    const [nweets, setNweets] = useState([]);\n\n    useEffect(() => {\n        dbService\n            .collection(\"nweets\")\n            .orderBy(\"createdAt\", \"desc\")\n            .onSnapshot((snapshot) => {\n                const newArray = snapshot.docs.map((document) => ({\n                    id: document.id,\n                    ...document.data(),\n                }));\n                setNweets(newArray);\n            });\n    }, []);\n\n    return (\n        <div className=\"container\">\n            <NweetFactory userObj={userObj} />\n            <div style={{ marginTop: 30 }}>\n                {nweets.map((nweet) => (\n                    <Nweet\n                        key={nweet.id}\n                        nweetObj={nweet}\n                        isOwner={nweet.creatorId === userObj.uid}\n                    />\n                ))}\n            </div>\n        </div>\n    );\n};\n\nexport default Home;","import { authService } from \"fbase\";\nimport { useState, useEffect } from 'react';\nimport { useHistory } from \"react-router-dom\";\nimport { dbService } from \"fbase\";\nimport Nweet from \"components/Nweet\";\n\nconst Profile = ({ userObj, refreshUser }) => {\n    const history = useHistory();\n    const [nweets, setNweets] = useState([]);\n    const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\n    const onLogOutClick = () => {\n        authService.signOut();\n        history.push(\"/\");\n    };\n\n    const onChange = (event) => {\n        const {\n            target: { value },\n        } = event;\n        setNewDisplayName(value);\n    };\n\n    const onSubmit = async (event) => {\n        event.preventDefault();\n        if (userObj.displayName !== newDisplayName) {\n            await userObj.updateProfile({ displayName: newDisplayName });\n            refreshUser();\n        }\n    };\n\n    const getMyNweets = async () => {\n        dbService\n            .collection(\"nweets\")\n            .where(\"creatorId\", \"==\", userObj.uid)\n            .orderBy(\"createdAt\", \"asc\")\n            .onSnapshot((snapshot) => {\n                const newArray = snapshot.docs.map((document) => ({\n                    id: document.id,\n                    ...document.data(),\n                }));\n                setNweets(newArray);\n            });\n    };\n    useEffect(() => {\n        getMyNweets();\n    });\n\n    return (\n        <div className=\"container\">\n            <form onSubmit={onSubmit} className=\"profileForm\">\n                <input\n                    onChange={onChange}\n                    type=\"text\"\n                    placeholder=\"Display name\"\n                    value={newDisplayName}\n                    autoFocus\n                    className=\"formInput\"\n                />\n                <input\n                    type=\"submit\"\n                    value=\"Update Profile\"\n                    className=\"formBtn\"\n                    style={{\n                        marginTop: 10,\n                    }}\n                />\n            </form>\n            <div\n                className=\"logoutPart\"\n            >\n                <span\n                    className=\"formBtn cancelBtn logOut\"\n                    onClick={onLogOutClick}\n                >\n                    Log Out\n                </span>\n            </div>\n            <div\n                style={{\n                    marginTop: 30,\n                }}\n            >\n                {nweets.map((nweet) => (\n                    <Nweet\n                        key={nweet.id}\n                        nweetObj={nweet}\n                        isOwner={nweet.creatorId === userObj.uid}\n                    />\n                ))}\n            </div>\n        </div>\n    );\n};\n\nexport default Profile;\n\n\n\n\n","import { Link } from \"react-router-dom\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTwitter } from \"@fortawesome/free-brands-svg-icons\";\nimport { faUser } from \"@fortawesome/free-regular-svg-icons\";\n\nconst Navigation = ({ userObj }) => {\n    return (\n        <nav>\n            <ul style={{ display: \"flex\", justifyContent: \"center\", marginTop: 50 }}>\n                <li>\n                    <Link to=\"/\" style={{ marginRight: 10 }}>\n                        <FontAwesomeIcon icon={faTwitter} color={\"#04AAFF\"} size=\"2x\" />\n                    </Link>\n                </li>\n                <li>\n                    <Link\n                        to=\"/profile\"\n                        style={{\n                            marginLeft: 10,\n                            display: \"flex\",\n                            flexDirection: \"column\",\n                            alignItems: \"center\",\n                            fontSize: 12,\n                        }}\n                    >\n                        <FontAwesomeIcon icon={faUser} colot={\"04AAFF\"} size=\"2x\" />\n                        <span style={{ marginTop: 10 }}>\n                            {userObj.displayName\n                                ? `${userObj.displayName}의 Profile`\n                                : \"Profile\"}\n                        </span>\n                    </Link>\n                </li>\n            </ul>\n        </nav>\n    );\n};\n\nexport default Navigation;","import { HashRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Auth from \"routes/Auth\";\nimport Home from \"routes/Home\";\nimport Profile from \"routes/Profile\";\nimport Navigation from \"./Navigation\";\n\nconst AppRouter = ({ isLoggedIn, userObj, refreshUser }) => {\n    return (\n        <Router>\n            {isLoggedIn && <Navigation userObj={userObj} />}\n            <Switch>\n                {isLoggedIn ? (\n                    <div\n                        style={{\n                            maxWidth: 890,\n                            width: \"100%\",\n                            margin: \"0 auto\",\n                            marginTop: 80,\n                            display: \"flex\",\n                            justifyContent: \"center\",\n                        }}\n                    >\n                        <Route exact path=\"/\">\n                            <Home userObj={userObj} />\n                        </Route>\n                        <Route exact path=\"/profile\">\n                            <Profile userObj={userObj} refreshUser={refreshUser} />\n                        </Route>\n                    </div>\n                ) : (\n                    <Route exact path=\"/\">\n                        <Auth />\n                    </Route>\n                )}\n            </Switch>\n        </Router>\n    );\n};\n\nexport default AppRouter;","import { useEffect, useState } from \"react\";\nimport AppRouter from \"components/Router\";\nimport { authService } from \"fbase\";\n\nfunction App() {\n    const [init, setInit] = useState(false);\n    const [userObj, setUserObj] = useState(null);\n\n    useEffect(() => {\n        authService.onAuthStateChanged((user) => {\n            if (user) {\n                setUserObj({\n                    uid: user.uid,\n                    displayName: user.displayName,\n                    updateProfile: (args) => user.updateProfile(args),\n                });\n            } else {\n                setUserObj(false);\n            }\n            setInit(true);\n        });\n    }, []);\n\n    const refreshUser = () => {\n        setUserObj(authService.currentUser);\n        const user = authService.currentUser;\n        setUserObj({\n            uid: user.uid,\n            displayName: user.displayName,\n            updateProfile: (args => user.updateProfile(args)),\n        });\n    };\n\n    return (\n        <>\n            {init ? (\n                <AppRouter\n                    isLoggedIn={Boolean(userObj)}\n                    userObj={userObj}\n                    refreshUser={refreshUser}\n                />\n            ) : (\"initializing...\"\n            )}\n        </>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from 'components/App';\nimport \"./styles.css\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}